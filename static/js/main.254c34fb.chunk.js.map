{"version":3,"sources":["ListEditor.tsx","config/config.ts","config/firebase.ts","db/repository.ts","App.tsx","auth/index.ts","reportWebVitals.ts","index.tsx"],"names":["ListEditor","props","textInput","prop","focus","editor","current","val","value","state","counter","text","React","createRef","handleChange","bind","handleKeyDown","this","str","ks","split","length","e","key","lineCount","getTextAreaLineCounter","handleCallback","setState","preventDefault","stopPropagation","target","ref","onKeyDown","onChange","spellCheck","entry","formattedText","i","errors","Component","config","firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebaseStore","initializeApp","Providers","google","auth","GoogleAuthProvider","db","firestore","Repository","date","uid","Promise","resolve","reject","timestamp","Timestamp","fromDate","Date","undefined","collection","doc","where","get","then","row","docs","forEach","childSnapshot","console","log","data","gratitude","currentUser","userEmail","email","FieldPath","documentId","add","docid","update","delete","App","useState","startDate","setStartDate","error","setError","isAuthenticated","name","user","setUser","repo","entries","setEntries","useEffect","onAuthStateChanged","displayName","fetchData","button","a","today","getFullYear","getMonth","getDate","getAllGratitudeByUserAndDate","result","signInWithSocialMedia","provider","signInWithPopup","catch","SignInWithSocialMedia","message","LoginButton","className","onClick","icon","faSignInAlt","LogoutButton","faSignOutAlt","type","id","selected","wrapperClassName","childData","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kRAcaA,EAAb,kDAGI,WAAYC,GAAa,IAAD,8BACpB,cAAMA,IAHFC,eAEgB,IADhBC,UACgB,IAaxBC,MAAQ,WACH,IAAIC,EAAS,EAAKH,UAAUI,QAC5B,GAAID,EAAQ,CACR,IAAIE,EAAMF,EAAOG,MACjBH,EAAOD,QACPC,EAAOG,MAAQ,GACfH,EAAOG,MAAOD,IAjBnB,EAAKJ,KAAQ,EAAKF,MAElB,EAAKQ,MAAQ,CACTC,QAAS,EACTC,KAAO,OAEX,EAAKT,UAAYU,IAAMC,YACvB,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,cAAgB,EAAKA,cAAcD,KAAnB,gBAVD,EAH5B,qDA0BI,WACIE,KAAKb,UA3Bb,oCA6CI,SAAuBc,GACnB,IAAIC,EAAKD,EAAIE,MAAM,SAEnB,OADeD,EAAGA,EAAGE,OAAO,GAAGD,MAAM,KACpB,KAhDzB,2BAmDI,SAAcE,GACV,GAAa,UAATA,EAAEC,IAAgB,CAClB,IAAMC,EAAYP,KAAKQ,uBAAuBR,KAAKR,MAAME,MAMzDM,KAAKd,KAAKuB,eAAeT,KAAKR,MAAME,MACpCM,KAAKU,SAAS,CACNjB,QAAUc,EAAY,IAG9BP,KAAKU,SAAS,CACVhB,KAAMM,KAAKR,MAAME,KAAO,KAAOM,KAAKR,MAAMC,QAAU,OAExDY,EAAEM,iBACFN,EAAEO,qBApEd,0BAwEI,SAAaP,GAEc,KAAnBA,EAAEQ,OAAOtB,MACTS,KAAKU,SAAS,CAAChB,KAAM,MAAOD,QAAS,IAErCO,KAAKU,SAAS,CAAChB,KAAMW,EAAEQ,OAAOtB,UA7E1C,oBAgFI,WACI,IAAMG,EAAOM,KAAKR,MAAME,KAExB,OACI,0BACIoB,IAAKd,KAAKf,UACVM,MAAOG,EACPqB,UAAWf,KAAKD,cAChBiB,SAAUhB,KAAKH,aACfoB,WAAW,aAzF3B,uCA+BI,SAAgCjC,EAAOQ,GACnC,GAAIR,EAAMkC,MAAM,CAEZ,IADA,IAAIC,EAAc,GACTC,EAAI,EAAGA,EAAIpC,EAAMkC,MAAMd,OAAQgB,IACpCD,EAAgBA,GAAiBC,EAAE,GAAK,KAAOpC,EAAMkC,MAAME,GAAK,OAGpE,MAAO,CAAE1B,KAAMyB,GAGnB,OAAOnC,EAAMqC,OAAS,CAACA,OAAQrC,EAAMqC,QAAU,SAzCvD,GAAgCC,a,iCCAjBC,G,aAbA,CACXC,SAAU,CACNC,OAAQC,0CACRC,WAAYD,sCACZE,YAAaF,0DACbG,UAAWH,sBACXI,cAAeJ,kCACfK,kBAAmBL,gBACnBM,MAAON,6CACPO,cAAeP,kBCLjBQ,EAAgBV,IAASW,cAAcZ,EAAOC,UAEvCY,EAAY,CACrBC,OAAQ,IAAIb,IAASc,KAAKC,oBAGjBD,EAAOd,IAASc,OAChBE,EAAKN,EAAcO,YCTnBC,EAAb,4GACI,SAA6BC,EAAcC,GACvC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAEzB,IAAI7B,EAAgB,GAGd8B,EAAYxB,IAASiB,UAAUQ,UAAUC,SAC3C,IAAIC,KAAKR,EAAO,mBAGVS,IAANR,GACiBJ,EAAGa,WAAW,SAASC,IAAIV,GACjCS,WAAW,SACjBE,MAAM,gBAAiB,KAAMP,GAC7BQ,MAAMC,MAAK,SAAUH,GAClB,IAAII,EAAc,EAClBJ,EAAIK,KAAKC,SAAQ,SAAUC,GACvBC,QAAQC,IAAIF,EAAcG,OAAOtE,MACrB,IAARgE,IACAxC,EAAQ2C,EAAcG,OAAOtE,KAE7BoD,EAAQ5B,IAEZwC,eAxB5B,oBAgCI,WACI,OAAOlB,EAAGa,WAAW,SAASG,QAjCtC,oBAoCI,SAAOS,GAAY,IAAD,IAONrB,EAHEI,EAAYxB,IAASiB,UAAUQ,UAAUC,SAC3C,IAAIC,KAAK,wBAGbP,EAAG,UAAGN,EAAK4B,mBAAR,aAAG,EAAkBtB,IACxB,IAAMuB,EAAS,UAAG7B,EAAK4B,mBAAR,aAAG,EAAkBE,MACpCN,QAAQC,IAAII,GAEZ,IAAId,EAAab,EAAGa,WAAW,cACrBD,IAANR,GACAS,EAAWE,MAAM/B,IAASiB,UAAU4B,UAAUC,aAAc,KAAM1B,GAEtES,EAAWE,MAAM,gBAAgB,KAAKP,GAC1CK,EAAWkB,IAAI,CACX,cAAkBvB,MAtD9B,oBA4DI,SAAOwB,EAAOjF,GACV,OAAOiD,EAAGa,WAAW,SAASC,IAAIkB,GAAOC,OAAOlF,KA7DxD,oBAgEI,SAAOiF,GACH,OAAOhC,EAAGa,WAAW,SAASC,IAAIkB,GAAOE,aAjEjD,KCiBe,SAASC,IACpB,MAAkCC,mBAAS,IAAIzB,MAA/C,mBAAO0B,EAAP,KAAkBC,EAAlB,KACA,EAA0BF,mBAAiB,IAA3C,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAwBJ,mBAAoB,CAACK,iBAAgB,EAAOC,KAAK,KAAzE,mBAAOC,EAAP,KAAaC,EAAb,KACIC,EAAmB,IAAI3C,EAC3B,EAA8BkC,mBAAiB,IAA/C,mBAAOU,EAAP,KAAgBC,EAAhB,KAGAC,qBAAU,WAENlD,EAAKmD,oBAAmB,SAAAN,GACpB,GAAIA,EAAM,CAAC,IAAD,IACFO,EAAkB,UAAGpD,EAAK4B,mBAAR,aAAG,EAAkBwB,YACvC9C,EAAU,UAAGN,EAAK4B,mBAAR,aAAG,EAAkBtB,IACnCwC,EAAQ,CAACH,iBAAgB,EAAKC,KAAKQ,IACnCC,EAAU/C,QAEVkB,QAAQC,IAAI,oBACZqB,EAAQ,CAACH,iBAAgB,EAAMC,KAAK,UAK7C,IAEH,IAwBIU,EAxBED,EAAS,uCAAG,WAAO/C,GAAP,mBAAAiD,EAAA,6DACRC,EAAQ,IAAI3C,KACZR,EAAOmD,EAAMC,cAAgB,KAAOD,EAAME,WAAa,GAAK,IAAMF,EAAMG,UAFhE,SAGOZ,EAAKa,6BAA6BvD,EAAMC,GAH/C,OAGRuD,EAHQ,OAIdZ,EAAWY,GAJG,2CAAH,sDAOTC,EAAwB,SAACC,GACb,KAAVtB,GAAcC,EAAS,IClDE,SAACqB,GAAD,OACjC,IAAIxD,SAAsC,SAACC,EAASC,GAChDT,EAAKgE,gBAAgBD,GAChB5C,MAAK,SAAA0C,GAAM,OAAIrD,EAAQqD,MACvBI,OAAM,SAAAxB,GAAK,OAAIhC,EAAOgC,SDgD3ByB,CAAsBH,GACjB5C,MAAK,SAAA0C,GAAW,IAAD,EACZf,EAAQ,CAACH,iBAAgB,EAAKC,KAAI,UAACiB,EAAOhB,YAAR,aAAC,EAAaO,iBAEnDa,OAAM,SAAAxB,GACHC,EAASD,EAAM0B,aAgB3B,SAASC,EAAY1H,GACjB,OACI,wBAAQ2H,UAAU,SAASC,QAAS5H,EAAM4H,QAA1C,SACI,cAAC,IAAD,CAAiBC,KAAMC,QAKnC,SAASC,EAAa/H,GAClB,OACI,wBAAQ2H,UAAU,SAASC,QAAS5H,EAAM4H,QAA1C,SACI,cAAC,IAAD,CAAiBC,KAAMG,QAcrC,OA9BMpB,EAHeT,EAAKF,gBAGX,cAAC8B,EAAD,CAAcH,QA0B3B,WACIxB,EAAQ,CAACH,iBAAiB,EAAOC,KAAK,QAzB7B,cAACwB,EAAD,CAAaE,QAmB1B,WACIR,EAAsBhE,EAAUC,QAChC+C,EAAQ,CAACH,iBAAiB,EAAMC,KAAK,QAQvC,sBAAKyB,UAAU,kBAAf,UACI,qBAAKA,UAAU,MAAf,SACI,qBAAKA,UAAU,uBAAf,SACI,sBAAKA,UAAU,gDAAf,UACI,qBAAKA,UAAU,eAAf,SAA+B,oBAAIA,UAAU,uBAAd,8BAC/B,wBAAQA,UAAU,iBAAiBM,KAAK,SAAS,cAAY,WAAW,cAAY,aAC5E,gBAAc,YAAY,gBAAc,QAAQ,aAAW,oBADnE,SAEI,sBAAMN,UAAU,0BAEpB,qBAAKA,UAAU,+CAA+CO,GAAG,YAAjE,SACI,oBAAIP,UAAU,aAAd,SACI,oBAAIA,UAAU,WAAd,SACKf,eAOzB,sBAAKe,UAAU,MAAf,UACI,qBAAKA,UAAU,qBACf,qBAAKA,UAAU,WAAf,SACI,sBAAKA,UAAU,MAAf,UACI,sBAAKA,UAAU,WAAf,qBACWxB,EAAKD,QAEhB,qBAAKyB,UAAU,oBAAf,SACI,cAAC,IAAD,CAAYQ,SAAUtC,EAAWuC,iBAAiB,aAAapG,SAAU,SAAC2B,GAAD,OAAUmC,EAAanC,aAI5G,qBAAKgE,UAAU,wBAGnB,qBAAKA,UAAU,MAAf,SACI,qBAAKA,UAAU,uBAAf,SACI,cAAC,EAAD,CAAYzF,MAAOoE,EAAS7E,eA1EnB,SAAC4G,GACpBvD,QAAQC,IAAIsD,aE/DpB,IAYeC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqB/D,MAAK,YAAkD,IAA/CgE,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.254c34fb.chunk.js","sourcesContent":["import React, {Component, KeyboardEvent } from 'react';\r\nimport './ListEditor.css';\r\n\r\n\r\ninterface Props {\r\n    entry: string;\r\n    handleCallback: (arg: string) => void\r\n}\r\n\r\ninterface State {\r\n    counter: number;\r\n    text: string;\r\n}\r\n\r\nexport class ListEditor extends Component<Props, State> {\r\n    private textInput: React.RefObject<HTMLTextAreaElement>;\r\n    private prop;\r\n    constructor(props :any) {\r\n        super(props);\r\n        this.prop  = this.props;\r\n\r\n        this.state = {\r\n            counter: 2,\r\n            text : \"1. \"\r\n        }\r\n        this.textInput = React.createRef();\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleKeyDown = this.handleKeyDown.bind(this);\r\n    }\r\n\r\n    focus = () => {\r\n         let editor = this.textInput.current;\r\n         if (editor) {\r\n             let val = editor.value;\r\n             editor.focus();\r\n             editor.value = \"\";\r\n             editor.value= val;\r\n         }\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.focus();\r\n    }\r\n\r\n    // right now it makes it ready only, which seems to be for current use case\r\n    static getDerivedStateFromProps(props, state) {\r\n        if (props.entry){\r\n            let formattedText='';\r\n            for (let i = 0; i < props.entry.length; i++) {\r\n                formattedText = formattedText + (i+1) + '. ' + props.entry[i] + '\\r\\n';\r\n            }\r\n\r\n            return { text: formattedText };\r\n        }\r\n        //props.handleCallback(\"Data from child\");\r\n        return props.errors ? {errors: props.errors} : null;\r\n    }\r\n\r\n\r\n    getTextAreaLineCounter(str: String){\r\n        var ks = str.split(/\\r?\\n/);\r\n        var lastLine = ks[ks.length-1].split(\".\");\r\n        return +lastLine[0];\r\n    }\r\n\r\n    handleKeyDown(e: KeyboardEvent) {\r\n        if (e.key ===\"Enter\") {\r\n            const lineCount = this.getTextAreaLineCounter(this.state.text);\r\n\r\n\r\n            // checking if linecount is 1\r\n            // if (lineCount == 1)\r\n            //     db\r\n            this.prop.handleCallback(this.state.text);\r\n            this.setState({\r\n                    counter : lineCount + 1\r\n                }\r\n            )\r\n            this.setState({\r\n                text: this.state.text + \"\\n\" + this.state.counter + \". \"\r\n            })\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n        }\r\n    }\r\n\r\n    handleChange(e: React.ChangeEvent<HTMLTextAreaElement>) {\r\n       // console.log(e.target.value);\r\n        if (e.target.value === \"\"){\r\n            this.setState({text: \"1. \", counter: 2});\r\n        }else\r\n            this.setState({text: e.target.value});\r\n    }\r\n\r\n    render() {\r\n        const text = this.state.text;\r\n\r\n        return(\r\n            <textarea\r\n                ref={this.textInput}\r\n                value={text}\r\n                onKeyDown={this.handleKeyDown}\r\n                onChange={this.handleChange}\r\n                spellCheck=\"false\"\r\n            />\r\n        )\r\n    }\r\n\r\n}\r\n\r\n","// Contains Global Configurations\r\nconst config = {\r\n    firebase: {\r\n        apiKey: process.env.REACT_APP_FIREBASE_KEY,\r\n        authDomain: process.env.REACT_APP_FIREBASE_DOMAIN,\r\n        databaseURL: process.env.REACT_APP_FIREBASE_DATABASE,\r\n        projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n        storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n        messagingSenderId: process.env.REACT_APP_FIREBASE_SENDER_ID,\r\n        appId: process.env.REACT_APP_FIREBASE_APP_ID,\r\n        measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID\r\n    }\r\n}\r\n\r\nexport default config;","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\nimport config from './config';\r\n\r\nconst firebaseStore = firebase.initializeApp(config.firebase);\r\n\r\nexport const Providers = {\r\n    google: new firebase.auth.GoogleAuthProvider(),\r\n};\r\n\r\nexport const auth = firebase.auth();\r\nexport const db = firebaseStore.firestore();//firebase.database().ref(\"users\");\r\n","import {db, auth} from \"../config/firebase\";\r\nimport firebase from 'firebase/app';\r\n\r\nexport class Repository {\r\n    getAllGratitudeByUserAndDate(date: string, uid: string): Promise<string> {\r\n        return new Promise((resolve, reject) =>\r\n        {\r\n            let entry: string = '';\r\n            // console.log(date);\r\n            // '2021-10-02\r\n            const timestamp = firebase.firestore.Timestamp.fromDate(\r\n                new Date(date + ' 00:00:00')\r\n            )\r\n\r\n            if (uid!==undefined) {\r\n                let collection = db.collection('users').doc(uid);\r\n                collection.collection('entry')\r\n                    .where('date_of_entry', '==', timestamp)\r\n                    .get().then(function (doc) {\r\n                        let row: number = 1;\r\n                        doc.docs.forEach(function (childSnapshot: any) {\r\n                            console.log(childSnapshot.data().text);\r\n                            if (row === 1) {\r\n                                entry = childSnapshot.data().text;\r\n                                //console.log(entry);\r\n                                resolve(entry);\r\n                            }\r\n                            row++;\r\n                        });\r\n                    }\r\n                );\r\n            }\r\n        })\r\n    }\r\n\r\n    getAll() {\r\n        return db.collection('users').get();\r\n    }\r\n\r\n    create(gratitude) {\r\n\r\n            // console.log(date);\r\n            // '2021-10-02\r\n            const timestamp = firebase.firestore.Timestamp.fromDate(\r\n                new Date('2021-10-02 00:00:00')\r\n            )\r\n            let uid: string = '';\r\n            uid=  auth.currentUser?.uid!;\r\n            const userEmail = auth.currentUser?.email;\r\n            console.log(userEmail);\r\n\r\n            let collection = db.collection('users');\r\n            if (uid!==undefined)\r\n                collection.where(firebase.firestore.FieldPath.documentId(), '==', uid)\r\n\r\n            collection.where('date_of_entry','==',timestamp)\r\n        collection.add({\r\n            'date_of_entry' : timestamp,\r\n\r\n        })\r\n\r\n    }\r\n\r\n    update(docid, value) {\r\n        return db.collection('users').doc(docid).update(value);\r\n    }\r\n\r\n    delete(docid) {\r\n        return db.collection('users').doc(docid).delete();\r\n    }\r\n\r\n\r\n}\r\n","import React, {useState, useEffect} from \"react\";\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSignInAlt, faSignOutAlt } from '@fortawesome/free-solid-svg-icons'\r\nimport {ListEditor} from \"./ListEditor\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport {auth, Providers} from './config/firebase';\r\nimport { SignInWithSocialMedia } from './auth';\r\nimport firebase from \"firebase/app\";\r\nimport {Repository} from './db/repository';\r\n\r\n\r\ninterface UserState {\r\n    isAuthenticated: boolean;\r\n    name: string;\r\n}\r\n\r\n\r\nexport default function App(){\r\n    const [startDate, setStartDate] = useState(new Date());\r\n    const [error, setError] = useState<string>('');\r\n    const [user, setUser] = useState<UserState>({isAuthenticated:false, name:\"\"});\r\n    let repo: Repository = new Repository();\r\n    const [entries, setEntries] = useState<string>('');\r\n\r\n    // Monitor and Update user state.\r\n    useEffect(() => {\r\n\r\n        auth.onAuthStateChanged(user => {\r\n            if (user) {\r\n                let displayName:string = auth.currentUser?.displayName!;\r\n                let uid:string = auth.currentUser?.uid!;\r\n                setUser({isAuthenticated:true,name:displayName});\r\n                fetchData(uid);\r\n            } else {\r\n                console.log('No user detected');\r\n                setUser({isAuthenticated:false,name:\"\"})\r\n            }\r\n        })\r\n\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    const fetchData = async (uid:string) => {\r\n        const today = new Date();\r\n        const date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\r\n        const result = await repo.getAllGratitudeByUserAndDate(date, uid);\r\n        setEntries(result);\r\n    }\r\n\r\n    const signInWithSocialMedia = (provider: firebase.auth.AuthProvider) => {\r\n        if (error !== '') setError('');\r\n\r\n        SignInWithSocialMedia(provider)\r\n            .then(result => {\r\n                setUser({isAuthenticated:true,name:result.user?.displayName!})\r\n            })\r\n            .catch(error => {\r\n                setError(error.message);\r\n            });\r\n    }\r\n\r\n    const handleCallback = (childData: string): void => {\r\n        console.log(childData);\r\n    }\r\n\r\n    const isLoggedIn = user.isAuthenticated;\r\n    let button;\r\n    if (isLoggedIn) {\r\n        button = <LogoutButton onClick={handleLogoutClick} />;\r\n    } else {\r\n        button = <LoginButton onClick={handleLoginClick} />;\r\n    }\r\n\r\n    function LoginButton(props) {\r\n        return (\r\n            <button className=\"custom\" onClick={props.onClick}>\r\n                <FontAwesomeIcon icon={faSignInAlt} />\r\n            </button>\r\n        );\r\n    }\r\n\r\n    function LogoutButton(props) {\r\n        return (\r\n            <button className=\"custom\" onClick={props.onClick}>\r\n                <FontAwesomeIcon icon={faSignOutAlt} />\r\n            </button>\r\n        );\r\n    }\r\n\r\n    function handleLoginClick() {\r\n        signInWithSocialMedia(Providers.google);\r\n        setUser({isAuthenticated: true, name:\"\"});\r\n    }\r\n\r\n    function handleLogoutClick() {\r\n        setUser({isAuthenticated: false, name:\"\"});\r\n    }\r\n\r\n  return (\r\n      <div className=\"container-fluid\">\r\n          <div className=\"row\">\r\n              <div className=\"col-md-6 offset-md-3\">\r\n                  <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n                      <div className=\"navbar-brand\" ><h1 className=\"display-3 text-muted\">Thankful Diary</h1></div>\r\n                      <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\"\r\n                              aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                          <span className=\"navbar-toggler-icon\"></span>\r\n                      </button>\r\n                      <div className=\"collapse navbar-collapse justify-content-end\" id=\"navbarNav\">\r\n                          <ul className=\"navbar-nav\">\r\n                              <li className=\"nav-item\">\r\n                                  {button}\r\n                              </li>\r\n                          </ul>\r\n                      </div>\r\n                  </nav>\r\n              </div>\r\n          </div>\r\n          <div className=\"row\">\r\n              <div className=\"col-md-3 outside\"></div>\r\n              <div className=\"col-md-6\">\r\n                  <div className=\"row\">\r\n                      <div className=\"col-md-6\">\r\n                        Welcome {user.name}\r\n                      </div>\r\n                      <div className=\"col-md-6 calendar\">\r\n                          <DatePicker selected={startDate} wrapperClassName=\"datePicker\" onChange={(date) => setStartDate(date)} />\r\n                      </div>\r\n                  </div>\r\n              </div>\r\n              <div className=\"col-md-3 outside\"></div>\r\n          </div>\r\n\r\n          <div className=\"row\">\r\n              <div className=\"col-md-6 offset-md-3\">\r\n                  <ListEditor entry={entries} handleCallback={handleCallback} />\r\n              </div>\r\n          </div>\r\n      </div>\r\n  );\r\n}\r\n","import firebase from 'firebase';\r\nimport { auth } from '../config/firebase';\r\n\r\nexport const SignInWithSocialMedia = (provider: firebase.auth.AuthProvider) =>\r\n    new Promise<firebase.auth.UserCredential>((resolve, reject) => {\r\n        auth.signInWithPopup(provider)\r\n            .then(result => resolve(result))\r\n            .catch(error => reject(error));\r\n    });","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}