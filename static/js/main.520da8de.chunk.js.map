{"version":3,"sources":["ListEditor.tsx","config/config.ts","config/firebase.ts","db/repository.ts","App.tsx","auth/index.ts","reportWebVitals.ts","index.tsx"],"names":["ListEditor","props","textInput","focus","editor","current","val","value","state","counter","text","React","createRef","handleChange","bind","handleKeyDown","this","str","ks","split","length","e","key","lineCount","getTextAreaLineCounter","setState","preventDefault","stopPropagation","target","ref","onKeyDown","onChange","spellCheck","entry","formattedText","i","errors","Component","config","firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebaseStore","initializeApp","Providers","google","auth","GoogleAuthProvider","db","firestore","Repository","date","Promise","resolve","reject","uid","timestamp","Timestamp","fromDate","Date","currentUser","userEmail","email","console","log","collection","undefined","where","FieldPath","documentId","get","then","doc","row","docs","forEach","childSnapshot","data","gratitude","add","docid","update","delete","App","useState","startDate","setStartDate","error","setError","isAuthenticated","name","user","setUser","repo","entries","setEntries","useEffect","onAuthStateChanged","displayName","fetchData","button","a","today","getFullYear","getMonth","getDate","getAllGratitudeByUserAndDate","result","signInWithSocialMedia","provider","signInWithPopup","catch","SignInWithSocialMedia","message","LoginButton","onClick","LogoutButton","className","type","id","selected","wrapperClassName","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.520da8de.chunk.js","sourcesContent":["import React, {Component, KeyboardEvent } from 'react';\r\nimport './ListEditor.css';\r\n\r\ninterface Props {\r\n    entry: string;\r\n}\r\n\r\ninterface State {\r\n    counter: number;\r\n    text: string;\r\n}\r\n\r\nexport class ListEditor extends Component<Props, State> {\r\n    private textInput: React.RefObject<HTMLTextAreaElement>;\r\n    constructor(props :any) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            counter: 2,\r\n            text : \"1. \"\r\n        }\r\n        this.textInput = React.createRef();\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleKeyDown = this.handleKeyDown.bind(this);\r\n    }\r\n\r\n    focus = () => {\r\n         let editor = this.textInput.current;\r\n         if (editor) {\r\n             let val = editor.value;\r\n             editor.focus();\r\n             editor.value = \"\";\r\n             editor.value= val;\r\n         }\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.focus();\r\n    }\r\n\r\n    // right now it makes it ready only, which seems to be for current use case\r\n    static getDerivedStateFromProps(props, state) {\r\n        if (props.entry){\r\n            let formattedText='';\r\n            for (let i = 0; i < props.entry.length; i++) {\r\n                formattedText = formattedText + (i+1) + '. ' + props.entry[i] + '\\r\\n';\r\n            }\r\n\r\n            return { text: formattedText };\r\n        }\r\n        return props.errors ? {errors: props.errors} : null;\r\n    }\r\n\r\n\r\n    getTextAreaLineCounter(str: String){\r\n        var ks = str.split(/\\r?\\n/);\r\n        var lastLine = ks[ks.length-1].split(\".\");\r\n        return +lastLine[0];\r\n    }\r\n\r\n    handleKeyDown(e: KeyboardEvent) {\r\n        if (e.key ===\"Enter\") {\r\n            const lineCount = this.getTextAreaLineCounter(this.state.text);\r\n            this.setState({\r\n                    counter : lineCount + 1\r\n                }\r\n            )\r\n            this.setState({\r\n                text: this.state.text + \"\\n\" + this.state.counter + \". \"\r\n            })\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n        }\r\n    }\r\n\r\n    handleChange(e: React.ChangeEvent<HTMLTextAreaElement>) {\r\n       // console.log(e.target.value);\r\n        if (e.target.value === \"\"){\r\n            this.setState({text: \"1. \", counter: 2});\r\n        }else\r\n            this.setState({text: e.target.value});\r\n    }\r\n\r\n    render() {\r\n        const text = this.state.text;\r\n\r\n        return(\r\n            <textarea\r\n                ref={this.textInput}\r\n                value={text}\r\n                onKeyDown={this.handleKeyDown}\r\n                onChange={this.handleChange}\r\n                spellCheck=\"false\"\r\n            />\r\n        )\r\n    }\r\n\r\n}\r\n\r\n","// Contains Global Configurations\r\nconst config = {\r\n    firebase: {\r\n        apiKey: process.env.REACT_APP_FIREBASE_KEY,\r\n        authDomain: process.env.REACT_APP_FIREBASE_DOMAIN,\r\n        databaseURL: process.env.REACT_APP_FIREBASE_DATABASE,\r\n        projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n        storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n        messagingSenderId: process.env.REACT_APP_FIREBASE_SENDER_ID,\r\n        appId: process.env.REACT_APP_FIREBASE_APP_ID,\r\n        measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID\r\n    }\r\n}\r\n\r\nexport default config;","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\nimport config from './config';\r\n\r\nconst firebaseStore = firebase.initializeApp(config.firebase);\r\n\r\nexport const Providers = {\r\n    google: new firebase.auth.GoogleAuthProvider(),\r\n};\r\n\r\nexport const auth = firebase.auth();\r\nexport const db = firebaseStore.firestore();//firebase.database().ref(\"users\");\r\n","import {db, auth} from \"../config/firebase\";\r\nimport firebase from 'firebase/app';\r\n\r\nexport class Repository {\r\n    getAllGratitudeByUserAndDate(date: string): Promise<string> {\r\n        return new Promise((resolve, reject) =>\r\n        {\r\n            let entry: string = '';\r\n            // console.log(date);\r\n            // '2021-10-02\r\n            const timestamp = firebase.firestore.Timestamp.fromDate(\r\n                new Date(date + ' 00:00:00')\r\n            )\r\n            let uid: string = '';\r\n            uid=  auth.currentUser?.uid!;\r\n            const userEmail = auth.currentUser?.email;\r\n            console.log(userEmail);\r\n\r\n            let collection = db.collection('users');\r\n            if (uid!==undefined)\r\n                collection.where(firebase.firestore.FieldPath.documentId(), '==', uid)\r\n\r\n            collection.where('date_of_entry','==',timestamp)\r\n                .get().then(function (doc){\r\n                    let row: number = 1;\r\n                    doc.docs.forEach(function (childSnapshot: any) {\r\n                        if (row === 1) {\r\n                            entry = childSnapshot.data().text;\r\n                            //console.log(entry);\r\n                            resolve(entry);\r\n                        }\r\n                        row++;\r\n                    });\r\n                }\r\n            );\r\n        })\r\n    }\r\n\r\n    getAll() {\r\n        return db.collection('users').get();\r\n    }\r\n\r\n    create(gratitude) {\r\n        return db.collection('users').add(gratitude);\r\n    }\r\n\r\n    update(docid, value) {\r\n        return db.collection('users').doc(docid).update(value);\r\n    }\r\n\r\n    delete(docid) {\r\n        return db.collection('users').doc(docid).delete();\r\n    }\r\n\r\n\r\n}\r\n","import React, {useState, useEffect} from \"react\";\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {ListEditor} from \"./ListEditor\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport {auth, Providers} from './config/firebase';\r\nimport { SignInWithSocialMedia } from './auth';\r\nimport firebase from \"firebase/app\";\r\nimport {Repository} from './db/repository';\r\n\r\ninterface UserState {\r\n    isAuthenticated: boolean;\r\n    name: string;\r\n}\r\n\r\n// interface GratitudeState {\r\n//     entry: string;\r\n// }\r\n\r\nexport default function App(){\r\n    const [startDate, setStartDate] = useState(new Date());\r\n    const [error, setError] = useState<string>('');\r\n    const [user, setUser] = useState<UserState>({isAuthenticated:false, name:\"\"});\r\n    let repo: Repository = new Repository();\r\n    const [entries, setEntries] = useState<string>('');\r\n   // const [entry, setEntry] = useState<GratitudeState>({entry:\"lorem ipsum\"});\r\n\r\n    // Monitor and Update user state.\r\n    useEffect(() => {\r\n\r\n        auth.onAuthStateChanged(user => {\r\n            if (user) {\r\n                let displayName:string = auth.currentUser?.displayName!;\r\n                setUser({isAuthenticated:true,name:displayName})\r\n            } else {\r\n                console.log('No user detected');\r\n                setUser({isAuthenticated:false,name:\"\"})\r\n            }\r\n        })\r\n        fetchData();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    const fetchData = async () => {\r\n        const today = new Date();\r\n        const date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\r\n        const result = await repo.getAllGratitudeByUserAndDate(date);\r\n        setEntries(result);\r\n    }\r\n\r\n    const signInWithSocialMedia = (provider: firebase.auth.AuthProvider) => {\r\n        if (error !== '') setError('');\r\n\r\n        SignInWithSocialMedia(provider)\r\n            .then(result => {\r\n                setUser({isAuthenticated:true,name:result.user?.displayName!})\r\n            })\r\n            .catch(error => {\r\n                setError(error.message);\r\n            });\r\n    }\r\n\r\n    const isLoggedIn = user.isAuthenticated;\r\n    let button;\r\n    if (isLoggedIn) {\r\n        button = <LogoutButton onClick={handleLogoutClick} />;\r\n    } else {\r\n        button = <LoginButton onClick={handleLoginClick} />;\r\n    }\r\n\r\n    function LoginButton(props) {\r\n        return (\r\n            <button onClick={props.onClick}>\r\n                Login\r\n            </button>\r\n        );\r\n    }\r\n\r\n    function LogoutButton(props) {\r\n        return (\r\n            <button onClick={props.onClick}>\r\n                Logout\r\n            </button>\r\n        );\r\n    }\r\n\r\n    function handleLoginClick() {\r\n        signInWithSocialMedia(Providers.google);\r\n        setUser({isAuthenticated: true, name:\"\"});\r\n    }\r\n\r\n    function handleLogoutClick() {\r\n        setUser({isAuthenticated: false, name:\"\"});\r\n    }\r\n\r\n  return (\r\n      <div className=\"container-fluid\">\r\n          <div className=\"row\">\r\n              <div className=\"col-md-6 offset-md-3\">\r\n                  <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n                      <div className=\"navbar-brand\" >Thankful Diary</div>\r\n                      <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\"\r\n                              aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                          <span className=\"navbar-toggler-icon\"></span>\r\n                      </button>\r\n                      <div className=\"collapse navbar-collapse justify-content-end\" id=\"navbarNav\">\r\n                          <ul className=\"navbar-nav\">\r\n                              <li className=\"nav-item\">\r\n                                  {button}\r\n                              </li>\r\n                          </ul>\r\n                      </div>\r\n                  </nav>\r\n              </div>\r\n          </div>\r\n          <div className=\"row\">\r\n              <div className=\"col-md-3 outside\"></div>\r\n              <div className=\"col-md-6\">\r\n                  <div className=\"row\">\r\n                      <div className=\"col-md-6\">\r\n                        Welcome {user.name}\r\n                      </div>\r\n                      <div className=\"col-md-6 calendar\">\r\n                          <DatePicker selected={startDate} wrapperClassName=\"datePicker\" onChange={(date) => setStartDate(date)} />\r\n                      </div>\r\n                  </div>\r\n              </div>\r\n              <div className=\"col-md-3 outside\"></div>\r\n          </div>\r\n\r\n          <div className=\"row\">\r\n              <div className=\"col-md-6 offset-md-3\">\r\n                  <ListEditor entry={entries}/>\r\n              </div>\r\n          </div>\r\n      </div>\r\n  );\r\n}\r\n","import firebase from 'firebase';\r\nimport { auth } from '../config/firebase';\r\n\r\nexport const SignInWithSocialMedia = (provider: firebase.auth.AuthProvider) =>\r\n    new Promise<firebase.auth.UserCredential>((resolve, reject) => {\r\n        auth.signInWithPopup(provider)\r\n            .then(result => resolve(result))\r\n            .catch(error => reject(error));\r\n    });","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}