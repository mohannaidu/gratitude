{"version":3,"sources":["ListEditor.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ListEditor","props","editorRef","focus","editor","current","focusEditor","onEditorStateChange","editorState","setState","contentBlock","htmlToDraft","contentState","ContentState","createFromBlockArray","contentBlocks","outputEditorState","EditorState","createWithContent","state","React","createRef","console","log","this","ref","toolbarHidden","Component","App","useState","Date","startDate","setStartDate","className","type","id","selected","onChange","date","style","border","padding","minHeight","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yTAYaA,EAAb,kDAEI,WAAYC,GAAa,IAAD,uBACpB,cAAMA,IAFFC,eACgB,IAexBC,MAAQ,WACJ,IAAIC,EAAS,EAAKF,UAAUG,QACxBD,GACAA,EAAOE,eAlBS,EA2BxBC,oBAAsB,SAACC,GAEnB,EAAKC,SAAS,CACVD,iBA5BJ,IACME,EAAeC,IADD,sBAEpB,GAAID,EAAc,CACd,IAAME,EAAeC,eAAaC,qBAAqBJ,EAAaK,eAC9DC,EAAoBC,cAAYC,kBAAkBN,GACxD,EAAKO,MAAQ,CACTX,YAAaQ,GARD,OAWpB,EAAKd,UAAYkB,IAAMC,YAXH,EAF5B,qDAwBI,WACIC,QAAQC,IAAI,qBACZC,KAAKrB,UA1Bb,oBAoCI,WACI,IAAQK,EAAgBgB,KAAKL,MAArBX,YACR,OACG,8BACC,cAAC,SAAD,CACIA,YAAaA,EACbiB,IAAKD,KAAKtB,UACVK,oBAAqBiB,KAAKjB,oBAC1BmB,eAAe,UA5C/B,GAAgCC,a,yBCLjB,SAASC,IACpB,MAAkCC,mBAAS,IAAIC,MAA/C,mBAAOC,EAAP,KAAkBC,EAAlB,KAEF,OACI,sBAAKC,UAAU,YAAf,UACI,qBAAKA,UAAU,MAAf,SACI,qBAAKA,UAAU,uBAAf,SACI,sBAAKA,UAAU,gDAAf,UACI,qBAAKA,UAAU,eAAf,6BACA,wBAAQA,UAAU,iBAAiBC,KAAK,SAAS,cAAY,WAAW,cAAY,aAC5E,gBAAc,YAAY,gBAAc,QAAQ,aAAW,oBADnE,SAEI,sBAAMD,UAAU,0BAEpB,qBAAKA,UAAU,+CAA+CE,GAAG,YAAjE,SACI,oBAAIF,UAAU,aAAd,SACI,oBAAIA,UAAU,WAAd,SACI,qBAAKA,UAAU,WAAf,gCAOxB,qBAAKA,UAAU,MAAf,SACI,qBAAKA,UAAU,kCAAf,SACI,cAAC,IAAD,CAAYG,SAAUL,EAAWM,SAAU,SAACC,GAAD,OAAUN,EAAaM,UAI1E,qBAAKL,UAAU,MAAf,SACI,qBAAKA,UAAU,uBAAf,SACI,qBAAKM,MAAO,CAAEC,OAAQ,iBAAkBC,QAAS,MAAOC,UAAW,SAAnE,SACI,cAAC,EAAD,aCrCtB,IAYeC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.25bab55d.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport { EditorState, ContentState} from 'draft-js';\r\nimport { Editor } from 'react-draft-wysiwyg';\r\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\r\nimport htmlToDraft from 'html-to-draftjs';\r\n\r\ninterface Props {}\r\n\r\ninterface State {\r\n    editorState: EditorState;\r\n}\r\n\r\nexport class ListEditor extends Component<Props, State> {\r\n    private editorRef: React.RefObject<Editor>;\r\n    constructor(props :any) {\r\n        super(props);\r\n        const starterList = '<ol><li></li></ol>';\r\n        const contentBlock = htmlToDraft(starterList);\r\n        if (contentBlock) {\r\n            const contentState = ContentState.createFromBlockArray(contentBlock.contentBlocks);\r\n            const outputEditorState = EditorState.createWithContent(contentState);\r\n            this.state = {\r\n                editorState: outputEditorState\r\n            };\r\n        }\r\n        this.editorRef = React.createRef<Editor>();\r\n\r\n    }\r\n\r\n    focus = () => {\r\n        let editor = this.editorRef.current;\r\n        if (editor) {\r\n            editor.focusEditor();\r\n        }\r\n    };\r\n\r\n    componentDidMount() {\r\n        console.log(\"component mounted\");\r\n        this.focus();\r\n    }\r\n\r\n    onEditorStateChange = (editorState: EditorState) => {\r\n        // console.log(editorState)\r\n        this.setState({\r\n            editorState\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { editorState } = this.state;\r\n        return(\r\n           <div>\r\n            <Editor\r\n                editorState={editorState}\r\n                ref={this.editorRef}\r\n                onEditorStateChange={this.onEditorStateChange}\r\n                toolbarHidden={true}\r\n            />\r\n           </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n","import React, {useState} from \"react\";\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {ListEditor} from \"./ListEditor\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nexport default function App() {\n    const [startDate, setStartDate] = useState(new Date());\n\n  return (\n      <div className=\"container\">\n          <div className=\"row\">\n              <div className=\"col-md-6 offset-md-3\">\n                  <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n                      <div className=\"navbar-brand\" >Daily Gratitude</div>\n                      <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\"\n                              aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                          <span className=\"navbar-toggler-icon\"></span>\n                      </button>\n                      <div className=\"collapse navbar-collapse justify-content-end\" id=\"navbarNav\">\n                          <ul className=\"navbar-nav\">\n                              <li className=\"nav-item\">\n                                  <div className=\"nav-link\">Login</div>\n                              </li>\n                          </ul>\n                      </div>\n                  </nav>\n              </div>\n          </div>\n          <div className=\"row\">\n              <div className=\"col-md-6 offset-md-3 text-right\">\n                  <DatePicker selected={startDate} onChange={(date) => setStartDate(date)} />\n              </div>\n          </div>\n\n          <div className=\"row\">\n              <div className=\"col-md-6 offset-md-3\">\n                  <div style={{ border: \"1px solid grey\", padding: '2px', minHeight: '400px' }}>\n                      <ListEditor/>\n\n                  </div>\n              </div>\n          </div>\n      </div>\n  );\n}","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}