{"version":3,"sources":["ListEditor.tsx","config/config.ts","config/firebase.ts","db/repository.ts","App.tsx","auth/index.ts","reportWebVitals.ts","index.tsx"],"names":["ListEditor","props","textInput","focus","editor","current","val","value","handleKeyDown","e","key","lineCount","getTextAreaLineCounter","entry","handleCallback","setState","counter","onEntryChange","state","preventDefault","stopPropagation","handleChange","target","React","createRef","bind","this","str","split","length","ref","onKeyDown","onChange","spellCheck","Component","config","firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebaseStore","initializeApp","Providers","google","auth","GoogleAuthProvider","db","firestore","Repository","date","uid","Promise","resolve","reject","a","timestamp","Timestamp","fromDate","Date","undefined","collection","doc","where","get","snapshot","empty","row","docs","forEach","childSnapshot","console","log","data","text","gratitude","currentUser","email","then","record","add","id","update","docid","delete","App","useState","startDate","setStartDate","error","setError","isAuthenticated","name","user","setUser","repo","entries","setEntries","useEffect","onAuthStateChanged","displayName","fetchData","button","getFullYear","getMonth","getDate","getAllGratitudeByUserAndDate","result","signInWithSocialMedia","provider","signInWithPopup","catch","SignInWithSocialMedia","message","LoginButton","className","onClick","icon","faSignInAlt","LogoutButton","faSignOutAlt","type","selected","wrapperClassName","childData","create","newName","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7d68e3d6.chunk.js","sourcesContent":["import React, {Component, KeyboardEvent, useEffect} from 'react';\r\nimport './ListEditor.css';\r\n\r\n\r\ninterface Props {\r\n    entry: string;\r\n    handleCallback: (arg: string) => void;\r\n    onEntryChange: (arg: string) => void\r\n}\r\n\r\ninterface State {\r\n    counter: number;\r\n}\r\n\r\nexport class ListEditor extends Component<Props, State> {\r\n    private textInput: React.RefObject<HTMLTextAreaElement>;\r\n    constructor(props :any) {\r\n        super(props);\r\n\r\n        this.textInput = React.createRef();\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleKeyDown = this.handleKeyDown.bind(this);\r\n    }\r\n\r\n\r\n    focus = () => {\r\n         let editor = this.textInput.current;\r\n         if (editor) {\r\n             let val = editor.value;\r\n             editor.focus();\r\n             editor.value = \"\";\r\n             editor.value= val;\r\n         }\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.focus();\r\n    }\r\n\r\n    getTextAreaLineCounter(str: String){\r\n        var ks = str.split(/\\r?\\n/);\r\n        return ks.length;\r\n    }\r\n\r\n    handleKeyDown = (e: KeyboardEvent) => {\r\n        if (e.key ===\"Enter\") {\r\n            const lineCount = this.getTextAreaLineCounter(this.props.entry);\r\n\r\n            this.props.handleCallback(this.props.entry);\r\n            this.setState({\r\n                    counter : lineCount +1\r\n                }, () => {\r\n                    this.props.onEntryChange(this.props.entry + \"\\n\" + this.state.counter + \". \");\r\n            });\r\n\r\n\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n        }\r\n    }\r\n\r\n    handleChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n       // console.log(e.target.value);\r\n        this.props.onEntryChange(e.target.value);\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <textarea\r\n                ref={this.textInput}\r\n                value={this.props.entry}\r\n                onKeyDown={this.handleKeyDown}\r\n                onChange={this.handleChange}\r\n                spellCheck=\"false\"\r\n            />\r\n        )\r\n    }\r\n\r\n}\r\n\r\n","// Contains Global Configurations\r\nconst config = {\r\n    firebase: {\r\n        apiKey: process.env.REACT_APP_FIREBASE_KEY,\r\n        authDomain: process.env.REACT_APP_FIREBASE_DOMAIN,\r\n        databaseURL: process.env.REACT_APP_FIREBASE_DATABASE,\r\n        projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n        storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n        messagingSenderId: process.env.REACT_APP_FIREBASE_SENDER_ID,\r\n        appId: process.env.REACT_APP_FIREBASE_APP_ID,\r\n        measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID\r\n    }\r\n}\r\n\r\nexport default config;","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\nimport config from './config';\r\n\r\nconst firebaseStore = firebase.initializeApp(config.firebase);\r\n\r\nexport const Providers = {\r\n    google: new firebase.auth.GoogleAuthProvider(),\r\n};\r\n\r\nexport const auth = firebase.auth();\r\nexport const db = firebaseStore.firestore();//firebase.database().ref(\"users\");\r\n","import {db, auth} from \"../config/firebase\";\r\nimport firebase from 'firebase/app';\r\n\r\nexport class Repository {\r\n    getAllGratitudeByUserAndDate(date: string, uid: string): Promise<string> {\r\n        return new Promise(async (resolve, reject) => {\r\n            let entry: string = '';\r\n            // console.log(date);\r\n            // '2021-10-02\r\n            const timestamp = firebase.firestore.Timestamp.fromDate(\r\n                new Date(date + ' 00:00:00')\r\n            )\r\n\r\n            if (uid !== undefined) {\r\n                let collection = db.collection('users').doc(uid);\r\n                const snapshot = await collection.collection('entry')\r\n                    .where('date_of_entry', '==', timestamp)\r\n                    .get();\r\n                if (snapshot.empty) {\r\n                    resolve('');\r\n                } else {\r\n                    let row: number = 1;\r\n                    snapshot.docs.forEach(function (childSnapshot: any) {\r\n                        console.log(childSnapshot.data().text);\r\n                        if (row === 1) {\r\n                            entry = childSnapshot.data().text;\r\n                            //console.log(entry);\r\n                            resolve(entry);\r\n                        } else {\r\n                            resolve('');\r\n                        }\r\n                        row++;\r\n                    });\r\n                }\r\n\r\n            }\r\n        })\r\n    }\r\n\r\n    getAll() {\r\n        return db.collection('users').get();\r\n    }\r\n\r\n    create(gratitude, date) {\r\n\r\n        // console.log(date);\r\n        // '2021-10-02\r\n        const timestamp = firebase.firestore.Timestamp.fromDate(\r\n            new Date(date+ ' 00:00:00')\r\n        )\r\n        let uid: string = '';\r\n        uid=  auth.currentUser?.uid!;\r\n        const userEmail = auth.currentUser?.email;\r\n        //console.log(userEmail);\r\n\r\n        let collection = db.collection('users');\r\n        if (uid!==undefined) {\r\n            collection.doc(uid)\r\n                .collection('entry')\r\n                .where('date_of_entry', '==', timestamp)\r\n                .get().then(function (record) {\r\n                if (record.empty){ // this is for adding new record\r\n                    collection.doc(uid)\r\n                        .collection('entry').add({\r\n                        'date_of_entry' : timestamp,\r\n                        'text' : gratitude\r\n                    })\r\n                }\r\n                else{\r\n                    collection.doc(uid)\r\n                        .collection('entry')\r\n                        .doc(record.docs[0].id)\r\n                        .update({\r\n                            'date_of_entry' : timestamp,\r\n                            'text' : gratitude\r\n                        })\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    update(docid, value) {\r\n        return db.collection('users').doc(docid).update(value);\r\n    }\r\n\r\n    delete(docid) {\r\n        return db.collection('users').doc(docid).delete();\r\n    }\r\n\r\n\r\n}\r\n","import React, {useState, useEffect} from \"react\";\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSignInAlt, faSignOutAlt } from '@fortawesome/free-solid-svg-icons'\r\nimport {ListEditor} from \"./ListEditor\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport {auth, Providers} from './config/firebase';\r\nimport { SignInWithSocialMedia } from './auth';\r\nimport firebase from \"firebase/app\";\r\nimport {Repository} from './db/repository';\r\n\r\n\r\ninterface UserState {\r\n    isAuthenticated: boolean;\r\n    name: string;\r\n}\r\n\r\n\r\nexport default function App(){\r\n    const [startDate, setStartDate] = useState(new Date());\r\n    const [error, setError] = useState<string>('');\r\n    const [user, setUser] = useState<UserState>({isAuthenticated:false, name:\"\"});\r\n    let repo: Repository = new Repository();\r\n    const [entries, setEntries] = useState<string>('');\r\n\r\n    // Monitor and Update user state.\r\n    useEffect(() => {\r\n\r\n        auth.onAuthStateChanged(user => {\r\n            if (user) {\r\n                let displayName:string = auth.currentUser?.displayName!;\r\n                let uid:string = auth.currentUser?.uid!;\r\n                setUser({isAuthenticated:true,name:displayName});\r\n                fetchData(uid);\r\n            } else {\r\n                console.log('No user detected');\r\n                setUser({isAuthenticated:false,name:\"\"})\r\n            }\r\n        })\r\n\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        let uid:string = auth.currentUser?.uid!;\r\n        fetchData(uid);\r\n        return () => {\r\n            // removing the listener when props.x changes\r\n        }\r\n    }, [startDate])\r\n\r\n    const fetchData = async (uid:string) => {\r\n        //const today = new Date();\r\n        //const date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\r\n        const date = startDate.getFullYear() + '-' + (startDate.getMonth() + 1) + '-' + startDate.getDate();\r\n        repo.getAllGratitudeByUserAndDate(date, uid).then(\r\n            result => {\r\n                if (result) {\r\n                    setEntries(result);\r\n                }else{\r\n                    setEntries(\"1. \");\r\n                }\r\n        }\r\n        );\r\n    }\r\n\r\n    const signInWithSocialMedia = (provider: firebase.auth.AuthProvider) => {\r\n        if (error !== '') setError('');\r\n\r\n        SignInWithSocialMedia(provider)\r\n            .then(result => {\r\n                setUser({isAuthenticated:true,name:result.user?.displayName!})\r\n            })\r\n            .catch(error => {\r\n                setError(error.message);\r\n            });\r\n    }\r\n\r\n    const handleCallback = (childData: string): void => {\r\n        const date = startDate.getFullYear() + '-' + (startDate.getMonth() + 1) + '-' + startDate.getDate();\r\n        console.log(childData);\r\n        repo.create(childData, date);\r\n    }\r\n\r\n    const isLoggedIn = user.isAuthenticated;\r\n    let button;\r\n    if (isLoggedIn) {\r\n        button = <LogoutButton onClick={handleLogoutClick} />;\r\n    } else {\r\n        button = <LoginButton onClick={handleLoginClick} />;\r\n    }\r\n\r\n    function LoginButton(props) {\r\n        return (\r\n            <button className=\"header-icon\" onClick={props.onClick}>\r\n                <FontAwesomeIcon icon={faSignInAlt} />\r\n            </button>\r\n        );\r\n    }\r\n\r\n    function LogoutButton(props) {\r\n        return (\r\n            <button className=\"header-icon\" onClick={props.onClick}>\r\n                <FontAwesomeIcon icon={faSignOutAlt} />\r\n            </button>\r\n        );\r\n    }\r\n\r\n    function handleLoginClick() {\r\n        signInWithSocialMedia(Providers.google);\r\n        setUser({isAuthenticated: true, name:\"\"});\r\n    }\r\n\r\n    function handleLogoutClick() {\r\n        setUser({isAuthenticated: false, name:\"\"});\r\n    }\r\n\r\n    function onChange(newName) {\r\n        setEntries(newName);\r\n    }\r\n\r\n    function handleDateChange(date) {\r\n         setStartDate(date);\r\n    };\r\n\r\n\r\n  return (\r\n      <div className=\"container-fluid\">\r\n          <div className=\"row header-border\">\r\n              <div className=\"col-md-6 offset-md-3 \">\r\n                  <nav className=\"navbar navbar-expand-lg navbar-light \">\r\n                      <div className=\"navbar-brand\" ><h3 className=\"display-4\">Thankful Diary</h3></div>\r\n                      <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\"\r\n                              aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                          <span className=\"navbar-toggler-icon\"></span>\r\n                      </button>\r\n                      <div className=\"collapse navbar-collapse justify-content-end\" id=\"navbarNav\">\r\n                          <ul className=\"navbar-nav\">\r\n                              <li className=\"nav-item\">\r\n                                  {button}\r\n                              </li>\r\n                          </ul>\r\n                      </div>\r\n                  </nav>\r\n              </div>\r\n          </div>\r\n          <div className=\"row\">\r\n              <div className=\"col-md-3 outside\"></div>\r\n              <div className=\"col-md-6\">\r\n                  <div className=\"row\">\r\n                      <div className=\"col-md-6\">\r\n                        Welcome {user.name}\r\n                      </div>\r\n                      <div className=\"col-md-6 calendar\">\r\n                          <DatePicker selected={startDate} wrapperClassName=\"datePicker\" onChange={handleDateChange} />\r\n                      </div>\r\n                  </div>\r\n              </div>\r\n              <div className=\"col-md-3 outside\"></div>\r\n          </div>\r\n\r\n          <div className=\"row\">\r\n              <div className=\"col-md-6 offset-md-3\">\r\n                  <ListEditor entry={entries} handleCallback={handleCallback} onEntryChange={onChange}/>\r\n              </div>\r\n          </div>\r\n      </div>\r\n  );\r\n}\r\n","import firebase from 'firebase';\r\nimport { auth } from '../config/firebase';\r\n\r\nexport const SignInWithSocialMedia = (provider: firebase.auth.AuthProvider) =>\r\n    new Promise<firebase.auth.UserCredential>((resolve, reject) => {\r\n        auth.signInWithPopup(provider)\r\n            .then(result => resolve(result))\r\n            .catch(error => reject(error));\r\n    });","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}